[build-system]
requires = ["setuptools>=69.0", "wheel>=0.42.0"]
build-backend = "setuptools.build_meta"

[project]
name = "context7-agent"
version = "2.0.0"
description = "Production-grade AI agent with Context7 MCP integration, stunning TUI, and comprehensive test suite"
readme = "README.md"
requires-python = ">=3.11"
license = {text = "MIT"}
authors = [
    {name = "Context7 Agent Team", email = "agent@context7.ai"}
]
maintainers = [
    {name = "Context7 Agent Team", email = "agent@context7.ai"}
]
keywords = ["ai", "rag", "mcp", "terminal", "tui", "developer-tools", "openai", "pydantic-ai"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Terminals",
    "Topic :: Utilities",
]
dependencies = [
    "anyio==4.9.0",
    "aiofiles==24.1.0",
    "openai==1.95.1",
    "pydantic==2.11.7",
    "pydantic-settings==2.10.1",
    "pydantic-ai==0.4.2",
    "python-dotenv==1.1.1",
    "rich==14.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest==8.3.5",
    "pytest-asyncio==0.25.3",
    "pytest-mock==3.14.0",
    "pytest-cov==6.0.0",
    "pytest-xdist==3.6.1",
    "black==25.1.0",
    "mypy==1.15.0",
    "ruff==0.9.0",
    "pre-commit==4.1.0",
    "hypothesis==6.122.3",
    "freezegun==1.5.1",
    "aioresponses==0.7.7",
]
docs = [
    "mkdocs==1.6.1",
    "mkdocs-material==9.5.49",
    "mkdocstrings[python]==0.27.0",
]

[project.urls]
Homepage = "https://github.com/nordeim/Context7-MCP-RAG-Agent"
Repository = "https://github.com/nordeim/Context7-MCP-RAG-Agent"
Documentation = "https://context7-agent.readthedocs.io"
Issues = "https://github.com/nordeim/Context7-MCP-RAG-Agent/issues"
Changelog = "https://github.com/nordeim/Context7-MCP-RAG-Agent/blob/main/CHANGELOG.md"

[project.scripts]
context7 = "src.cli:main"
context7-agent = "src.cli:main"

[tool.setuptools]
packages = ["src"]

[tool.black]
line-length = 88
target-version = ['py311', 'py312', 'py313']
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.ruff]
target-version = "py311"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"tests/*" = ["B011", "F841"]  # tests can use assert False and unused variables

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = ["tests.*"]
disallow_untyped_defs = false

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = "-v --tb=short --strict-markers --cov=src --cov-report=term-missing --cov-report=html --cov-fail-under=90"
asyncio_mode = "auto"
markers = [
    "slow: marks tests as slow",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/venv/*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
